<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>hx</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>name</key>
	<string>haXe</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#package</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#imports</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#class</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#enum</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>contentName</key>
			<string>meta.scope.block.haxe</string>
			<key>end</key>
			<string>\}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>block-contents</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-elements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<key>class</key>
		<dict>
			<key>begin</key>
			<string>(?x)							# Turn on extended mode
						  ^\s*							# Start of line and optional whitespace
						  (?=class)						# Class definition
						</string>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#class-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-extends</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-implements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-elements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#methods-all</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-block</string>
				</dict>
			</array>
		</dict>
		<key>class-extends</key>
		<dict>
			<key>begin</key>
			<string>\b(extends)\b\s+\b(\w+)\b\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((?=implements)|(\{))</string>
			<key>name</key>
			<string>meta.definition.class.extends.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#package-path</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\w+)\b\s*</string>
					<key>name</key>
					<string>invalid.illegal.unexpected-extends.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^\s}a-zA-Z0-9.]</string>
					<key>name</key>
					<string>invalid.illegal.unexpected-extends-character.haxe</string>
				</dict>
			</array>
		</dict>
		<key>class-implements</key>
		<dict>
			<key>begin</key>
			<string>\b(implements)\b\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={extends)|(\{)</string>
			<key>name</key>
			<string>meta.definition.class.implements.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\w+)\b\s*</string>
					<key>name</key>
					<string>entity.name.type.class.haxe</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#package-path</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.seperator.implements.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^\s\}]</string>
					<key>name</key>
					<string>invalid.illegal.expected-implements.seperator.haxe</string>
				</dict>
			</array>
		</dict>
		<key>class-name</key>
		<dict>
			<key>begin</key>
			<string>(?x)
						 (?&lt;=class)		# look behind for class
						 \s+			# At least one character of whitespace
				  		 (\w+)\b		# The name of the class.
				  		 (\&lt;(\w+)\&gt;)?   # Type Parameter.
						</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.type-parameter.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((?=implements|extends)|(\{))</string>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\S+</string>
					<key>name</key>
					<string>invalid.illegal.unexpected.haxe</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>//.*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.haxe</string>
				</dict>
			</array>
		</dict>
		<key>enum</key>
		<dict>
			<key>begin</key>
			<string>(?x)							# Turn on extended mode
						  ^\s*							# Start of line and optional whitespace
						  (?=enum)						# Enum definition
						</string>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.enum.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#enum-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>enum-name</key>
		<dict>
			<key>begin</key>
			<string>(?x)
						 (?&lt;=enum)		# look behind for class
						 \s+			# At least one character of whitespace
				  		 (\w+)\b		# The name of the enum.
				  		 (\&lt;(\w+)\&gt;)?   # Type Parameter.				  		 
						</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.enum.haxe</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.type-parameter.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\{</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\S+</string>
					<key>name</key>
					<string>invalid.illegal.unexpected.haxe</string>
				</dict>
			</array>
		</dict>
		<key>imports</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.haxe</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(import)\s+(.*?)((;)|$)</string>
			<key>name</key>
			<string>storage.type.import.haxe</string>
		</dict>
		<key>interface</key>
		<dict>
			<key>begin</key>
			<string>(?x)				# Turn on extended mode
						 ^					# a line beginning with
						 \s*				# some optional space
						 (interface)\s+		# interface declaration and at least one char. of whitespace
						 (\w+)              # interface name.
						 \s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.modifier.haxe</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Using a separate definition for interfaces as they use multiple extends statements.
						   Relies, luckily, on the fact that an interface doesnt contain any sub blocks to avoid problems with the 
						   language definition and clashing scopes.</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.interface.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interface-extends</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface-methods</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-include</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface-errors</string>
				</dict>
			</array>
		</dict>
		<key>interface-error-block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>comment</key>
			<string>TODO, find a way for this to exist alongside
			               an interface that has not been extended.</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>invalid.illegal.haxe</string>
		</dict>
		<key>interface-errors</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>^\s*\b(public|private|\w+)\b\s+(function).*$</string>
					<key>name</key>
					<string>invalid.illegal.interface.haxe</string>
				</dict>
			</array>
		</dict>
		<key>interface-extends</key>
		<dict>
			<key>begin</key>
			<string>(\b(extends)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\{)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.bracket.end</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.interface.extends.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\w+)\b\s*</string>
					<key>name</key>
					<string>entity.name.type.class.haxe</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#package-path</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.seperator.extends.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^\s\}]</string>
					<key>name</key>
					<string>invalid.illegal.expected-extends.seperator.haxe</string>
				</dict>
			</array>
		</dict>
		<key>interface-methods</key>
		<dict>
			<key>begin</key>
			<string>(?x)
						 ^\s*                   # start of line, optional whitespace
						 (function)\s+          # function declaration
						 (\s*\w+)               # Method name.
						 \s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.haxe</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.haxe</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.haxe</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>matches: public function functionName():returnType;
						   TODO, currently looking for a way to avoid having to use a 
						   semicolon to terminate the line ending.
						   (trouble being mulitline parameters).</string>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.line.end.haxe</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.method.interface.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\))</string>
					<key>name</key>
					<string>punctuation.definition.parameters.end.haxe</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-parameters-default</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-seperator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>:</string>
					<key>name</key>
					<string>punctuation.seperator.return-type.haxe</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-return-void</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
			</array>
		</dict>
		<key>language-constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bnull\b</string>
					<key>name</key>
					<string>constant.language.null.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.haxe</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>This is only a (wise) convention.</string>
					<key>match</key>
					<string>\b([A-Z0-9\_]+?)\b</string>
					<key>name</key>
					<string>constant.language.conventional.haxe</string>
				</dict>
			</array>
		</dict>
		<key>language-elements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#language-constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-storage</string>
				</dict>
			</array>
		</dict>
		<key>language-keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(case|default|dynamic|do|else|for|get|if|in|set|super|switch|while)\b</string>
					<key>name</key>
					<string>keyword.control.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(return|break|continue)\b</string>
					<key>name</key>
					<string>keyword.control.end.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(try|catch|throw)\b</string>
					<key>name</key>
					<string>keyword.control.catch-exception.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(new|is|type|trace|cast|untyped)\b</string>
					<key>name</key>
					<string>keyword.operator.haxe</string>
				</dict>
			</array>
		</dict>
		<key>language-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=[.])(\s|,|;|\)|\])</string>
					<key>name</key>
					<string>meta.scope.following.dot.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[-!%&amp;*+=/?:\|&lt;&gt;;\[\]]</string>
					<key>name</key>
					<string>keyword.operator.symbolic.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.symbolic.dot.haxe</string>
				</dict>
			</array>
		</dict>
		<key>language-storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(dynamic|override|private|public|static)\b</string>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(class|const|enum|extends|function|implements|interface|package|var)\b</string>
					<key>name</key>
					<string>storage.type.haxe</string>
				</dict>
			</array>
		</dict>
		<key>list-seperator</key>
		<dict>
			<key>match</key>
			<string>,</string>
			<key>name</key>
			<string>punctuation.separator.haxe</string>
		</dict>
		<key>method</key>
		<dict>
			<key>begin</key>
			<string>(?x)
				         ^\s*
	    			     ((override|static|inline)\s+)?                                  # Optional override or static
	    			     (public|private|dynamic|\w+)\s+ 
	    			     ((static|inline)\s+)?                                           # Optional static.
	    			     (function)\s+
	    			     (\s*\w+)                                                 # Method name.
	    			     \s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.namespace.haxe</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.haxe</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.haxe</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\{)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.haxe</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.definition.method.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-parameters-default</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-seperator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-return</string>
				</dict>
			</array>
		</dict>
		<key>method-block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.function.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>method-parameters</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.paramater.method.haxe</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.seperator.haxe</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.class.haxe</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
						 (\w+)          # paramater name
						 \s*(\:)\s*     # type seperator
						 ((\w|\.)+)     # followed by class
						 </string>
		</dict>
		<key>method-parameters-default</key>
		<dict>
			<key>begin</key>
			<string>(=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.symbolic.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\))|(,)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-constants</string>
				</dict>
			</array>
		</dict>
		<key>method-return</key>
		<dict>
			<key>begin</key>
			<string>(:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.seperator.return-type.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\{)</string>
			<key>name</key>
			<string>meta.method-return.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-classes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-return-void</string>
				</dict>
			</array>
		</dict>
		<key>method-return-void</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\bVoid\b</string>
					<key>name</key>
					<string>keyword.void.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bvoid\b</string>
					<key>name</key>
					<string>invalid.illegal.haxe</string>
				</dict>
			</array>
		</dict>
		<key>methods-all</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\b</string>
					<key>name</key>
					<string>constant.numeric.haxe</string>
				</dict>
			</array>
		</dict>
		<key>package</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#package-signature</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#package-block</string>
				</dict>
			</array>
		</dict>
		<key>package-block</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.package.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#imports</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#language-storage</string>
				</dict>
			</array>
		</dict>
		<key>package-path</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[\w.]+\.(\b|\*)</string>
					<key>name</key>
					<string>entity.name.package.haxe</string>
				</dict>
			</array>
		</dict>
		<key>package-signature</key>
		<dict>
			<key>begin</key>
			<string>(package)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\w\.]+)?</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.package.haxe</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.package.haxe</string>
		</dict>
		<key>regexp</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[=(:]|^|return)\s*(/)(?![/*+{}?])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.haxe</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)[igsmx]*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.haxe</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.haxe</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.haxe</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.haxe</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.haxe</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.haxe</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.haxe</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support-classes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-classes-haxe</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-classes-flash</string>
				</dict>
			</array>
		</dict>
		<key>support-classes-flash</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(Accessibility|Boot|Button|Camera|Color|ContextMenu|ContextMenuItem|ExtendedKey|Key|Lib|LoadVars|LocalConnection|Microphone|Mouse|MovieClip|MovieClipLoader|NetConnection|NetStream|PrintJob|Selection|SelectionListener|SharedObject|Sound|Stage|System|TextField|TextFormat|TextSnapshot|Video|XMLRequest|XMLSocket)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(BitmapData)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.display</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ExternalInterface)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.external</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(BevelFilter|BitmapFilter|BlurFilter|ColorMatrixFilter|ConvolutionFilter|DisplacementMapFilter|DropShadowFilter|GlowFilter|GradientBevelFilter|GradientGlowFilter)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.filters</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ColorTransform|Matrix|Point|Rectangle|Transform)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.geom</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(FileReference|FileReferenceList)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.net</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Capabilities||IME|Security)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.system</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(StyleSheet|TextRenderer)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash.text</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Boot|Error|Lib|Vector)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Accessibility|AccessibilityImplementation|AccessibilityProperties)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.accessibility</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(AVM1Movie|ActionScriptVersion|Bitmap|BitmapData|BitmapDataChannel|BlendMode|CapsStyle|DisplayObject|DisplayObjectContainer|FrameLabel|GradientType|Graphics|GraphicsBitmapFill|GraphicsEndFill|GraphicsGradientFill|GraphicsPath|GraphicsPathCommand|GraphicsPathWinding|GraphicsShaderFill|GraphicsSolidFill|GraphicsStroke|GraphicsTrianglePath|IBitmapDrawable|IGraphicsData|IGraphicsFill|IGraphicsPath|IGraphicsStroke|InteractiveObject|InterpolationMethod|JointStyle|LineScaleMode|Loader|LoaderInfo|MorphShape|MovieClip|PixelSnapping|SWFVersion|Scene|Shader|ShaderData|ShaderInput|ShaderJob|ShaderParameter|ShaderParameterType|ShaderPrecision|Shape|SimpleButton|SpreadMethod|Sprite|Stage|StageAlign|StageDisplayStage|StageQuality|StageScaleMode|TriangleCulling)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.display</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(EOFError|IOError|IllegalOperationError|InvalidSWFError|MemoryError|ScriptTimeoutError|StackOverflowError)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.errors</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ActivityEvent|AsyncErrorEvent|ContextMenuEvent|DataEvent|ErrorEvent|Event|EventDispatcher|EventPhase|FocusEvent|FullScreenEvent|HTTPStatusEvent|IEventDispatcher|IMEEvent|IOErrorEvent|KeyboardEvent|MouseEvent|NetFilterEvent|NetStatusEvent|ProgressEvent|SamplesCallbackEvent|SecurityErrorEvent|ShaderEvent|StatusEvent|SyncEvent|TextEvent|TimerEvent|WeakFunctionClosure|WeakMethodClosure)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.events</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ExternalInterface)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.external</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(BevelFilter|BitmapFilter|BitmapFilterQuality|BitmapFilterType|BlurFilter|ColorMatrixFilter|ConvolutionFilter|DisplacementMapFilter|DisplacementMapFilterMode|DropShadowFilter|GlowFilter|GradientBevelFilter|GradientGlowFilter|ShaderFilter)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.filters</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ColorTransform|Matrix|Matrix3D|Orientation3D|PerspectiveProjection|Point|Rectangle|Transform|Utils3D|Vector3D)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.geom</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Camera|ID3Info|Microphone|Sound|SoundChannel|SoundCodec|SoundLoaderContext|SoundMixer|SoundTransform|Video)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.media</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(DynamicPropertyOutput|FileFilter|FileReference|FileReferenceList|IDynamicPropertyOutput|IDynamicPropertyWriter|LocalConnection|NetConnection|NetStream|NetStreamInfo|NetStreamPlayOptions|NetStreamPlayTransitions|ObjectEncoding|Responder|SharedObject|SharedObjectFlushStatus|Socket|URLLoader|URLLoaderDataFormat|URLRequest|URLRequestHeader|URLRequestMethod|URLStream|URLVariables|XMLSocket)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.net</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(PrintJob|PrintJobOptions|PrintJobOrientation)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.printing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Api|DeleteObjectSample|NewObjectSample|Sample|StackFrame)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.sampler</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ApplicationDomain|Capabilities|FSCommand|IME|IMEConversionMode|JPEGLoaderContext|LoaderContext|Security|SecurityDomain|SecurityPanel|System)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.system</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(AntiAliasType|CSMSettings|Font|FontStyle|FontType|GridFitType|StaticText|StyleSheet|TextColorType|TextDisplayMode|TextExtent|TextField|TextFieldAutoSize|TextFieldType|TextFormat|TextFormatAlign|TextFormatDisplay|TextLineMetrics|TextRenderer|TextRun|TextSnapshot)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.text</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(BreakOpportunity|ContentElement|DigitCase|DigitWidth|EastAsianJustifier|ElementFormat|FontDescription|FontLookup|FontMetrics|FontPosture|FontWeight|GlyphRotation|GraphicElement|GroupElement|JustificationStyle|Kerning|LigatureLevel|LineJustification|SpaceJustifier|TabAlignment|TabStop|TextBaseline|TextBlock|TextElement|TextJustifier|TextLine|TextLineCreationResult|TextLineMirrorRegion|TextLineValidity|TextRotation|TypographicCase)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.text.engine</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Trace)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.trace</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ContextMenu|ContextMenuBuiltInItems|ContextMenuClipboardItems|ContextMenuItem|KeyLocation|Keyboard|Mouse|MouseCursor)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.ui</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ByteArray|Dictionary|Endian|IDataInput|IDataOutput|IExternalizable|Namespace|ObjectInput|ObjectOutput|Proxy|QName|SetIntervalTimer|Timer|TypedDictionary)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.utils</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(XML|XMLDocument|XMLList|XMLNode|XMLNodeType|XMLParser|XMLTag)\b</string>
					<key>name</key>
					<string>support.class.haxe.flash9.xml</string>
				</dict>
			</array>
		</dict>
		<key>support-classes-haxe</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(Array|ArrayAccess|Bool|Class|Date|DateTools|Dynamic|EReg|Enum|Float|Hash|Int|IntHash|IntIter|Iterable|Iterator|Lambda|List|Math|Null|Reflect|Std|String|StringBuf|StringTools|Type|UInt|ValueType|Void|Xml|XmlType)\b</string>
					<key>name</key>
					<string>support.class.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(FastCell|FastList|Firebug|Http|Int32|Log|Md5|PosInfos|Public|Resource|Serializer|Stack|StackItem|Template|Timer|TimerQueue|TypeResolver|Unserializer)\b</string>
					<key>name</key>
					<string>support.class.haxe.haxe</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Bytes|BytesBuffer|BytesData|BytesInput|BytesOutput|Eof|Error|Input|Output|StringInput)\b</string>
					<key>name</key>
					<string>support.class.haxe.io</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(AMFConnection|AsyncAdapter|AsyncConnection|AsyncDebugConnection|AsyncProxy|Connection|Context|ContextAll|DelayedConnection|ExternalConnection|FlashJsConnection|HttpAsyncConnection|HttpConnection|LocalConnection|Proxy|Socket|SocketConnection|SocketProtocol|SocketWrapper|SyncSocketConnection)\b</string>
					<key>name</key>
					<string>support.class.haxe.haxe.remoting</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(CType|ClassField|Classdef|EnumField|Enumdef|Generic|Infos|Path|PathParams|Platforms|Rights|TypeApi|TypeInfos|TypeParams|TypeRoot|TypeTree|Typedef|XmlParser)\b</string>
					<key>name</key>
					<string>support.class.haxe.haxe.rtti</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(TestCase|TestResult|TestRunner|TestStatus)\b</string>
					<key>name</key>
					<string>support.class.haxe.haxe.unit</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Attrib|Check|Fast|Filter|Proxy|Rule)\b</string>
					<key>name</key>
					<string>support.class.haxe.haxe.xml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Anchor|Body|Boot|Button|Checkbox|Document|Dom|Event|FileUpload|Form|FormElement|Frame|Frameset|Hidden|History|HtmlCollection|HtmlDom|IFrame|Image|Lib|Link|Location|MetaDom|Navigator|Option|Password|Radio|Reset|SWFObject|Screen|Select|Selection|Style|StyleSheet|Submit|Text|Textarea|Window|XMLHttpRequest|XMLSocket)\b</string>
					<key>name</key>
					<string>support.class.haxe.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Boot|FileKind|FileStat|FileSystem|Lib|Random|Sys|Utf8|Web)\b</string>
					<key>name</key>
					<string>support.class.haxe.neko</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Connection|Manager|MySql|Object|ResultSet|Sqlite|Transaction)\b</string>
					<key>name</key>
					<string>support.class.haxe.neko.db</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(File|FileHandle|FileInput|FileOutput|FileSeek|Path|Process)\b</string>
					<key>name</key>
					<string>support.class.haxe.neko.io</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Host|Poll|ProxyDetect|Proxysettings|ServerLoop|Socket|SocketHandle|SocketInput|SocketOutput|ThreadRemotingServer|ThreadServer)\b</string>
					<key>name</key>
					<string>support.class.haxe.neko.net</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Deque|Gc|Loader|LoaderHandle|Lock|Module|ModuleHandle|Mutex|Thread|ThreadHandle|Tls|Ui)\b</string>
					<key>name</key>
					<string>support.class.haxe.neko.vm</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(CRC32|Compress|Flush|Reader|Uncompress|Writer|ZipEntry)\b</string>
					<key>name</key>
					<string>support.class.haxe.neko.zip</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Boot|CacheLimiter|Exception|FileKind|FileStat|FileSystem|HException|IniHash|Lib|Session|Sys|Utf8|Web)\b</string>
					<key>name</key>
					<string>support.class.haxe.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Connection|DBase|Field|FieldType|Manager|Mysql|Object|ResultSet|Sqlite)\b</string>
					<key>name</key>
					<string>support.class.haxe.php.db</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(File|FileHandle|FileInput|FileOutput|FileSeek|Path|Process)\b</string>
					<key>name</key>
					<string>support.class.haxe.php.io</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Host|Socket|SocketDomain|SocketHandle|SocketInput|SocketOutput|Process)\b</string>
					<key>name</key>
					<string>support.class.haxe.php.net</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(HtmlPrinter|Main)\b</string>
					<key>name</key>
					<string>support.class.haxe.tools.haxedoc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Answer|Datas|Developer|Main|Progress|ProgressIn|Project|ProjectInfos|ProjectManager|Remoting_SiteApi|Site|SiteApi|SiteDb|SiteProxy|User|UserInfos|Version|VersionInfos|VersionManager|XmlInfos)\b</string>
					<key>name</key>
					<string>support.class.haxe.tools.haxelib</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Main|Progress)\b</string>
					<key>name</key>
					<string>support.class.haxe.tools.hxinst</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(this|super)\b</string>
					<key>name</key>
					<string>variable.language.haxe</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>This follows the convention that underscores or, less often, 
						           dollars identify private and protected variable names.</string>
					<key>match</key>
					<string>((\$|\b_)\w+?)\b</string>
					<key>name</key>
					<string>variable.language.private.haxe</string>
				</dict>
			</array>
		</dict>
		<key>variables-local</key>
		<dict>
			<key>comment</key>
			<string>TODO</string>
			<key>name</key>
			<string>meta.variable-definition.haxe</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.haxe</string>
	<key>uuid</key>
	<string>AF52BABC-3203-442A-90D6-CE01CFDE05B6</string>
</dict>
</plist>
